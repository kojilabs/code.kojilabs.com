<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CodeStix</title>
    <description>Quick tips for busy developers</description>
    <link>http://codestix.com/</link>
    <atom:link href="http://codestix.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 03 Sep 2014 07:45:53 +0100</pubDate>
    <lastBuildDate>Wed, 03 Sep 2014 07:45:53 +0100</lastBuildDate>
    <generator>Jekyll v2.3.0</generator>
    
      <item>
        <title>Google Public DNS</title>
        <description>&lt;p&gt;When you visit a website, your browser is connecting to the website’s server based on it’s IP address. It would be a nightmare to remember all the IP address for your favourite websites, so instead we use human-friendly domain names. The browser is able to lookup the IP address that belongs to a domain using DNS (or Domain Name System). This is a bit like a really big phone book.&lt;/p&gt;

&lt;p&gt;Usually your computer will use the DNS service provided by your Internet Service Provider (ISP), but it is possible to connect to a different DNS service. Google’s Public DNS service is generally faster than the one provided by your ISP and is also more secure.&lt;/p&gt;

&lt;p&gt;Switching to Google Public DNS is relatively simple. All you need to do is update your computers network configuration, adding the following two IP address as the default DNS servers.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;8.8.8.8
8.8.4.4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To set up Google Public DNS on your mac, follow these steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open &lt;strong&gt;Settings&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Network&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;connection&lt;/strong&gt; you are using&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;Advanced&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Select the &lt;strong&gt;DNS&lt;/strong&gt; tab&lt;/li&gt;
  &lt;li&gt;Add the Google Public DNS IP address one at a time by clicking the &lt;strong&gt;+&lt;/strong&gt; icon&lt;/li&gt;
  &lt;li&gt;Click &lt;strong&gt;OK&lt;/strong&gt; and &lt;strong&gt;Apply&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For instructions on how to set up Google Public DNS on other operating systems see the &lt;a href=&quot;https://developers.google.com/speed/public-dns/docs/using&quot;&gt;documentation&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;Google Public DNS also supports IPv6. Just use the following two IP address rather than the ones above.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2001:4860:4860::8888
2001:4860:4860::8844
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Tue, 03 Jun 2014 13:00:00 +0100</pubDate>
        <link>http://codestix.com/2014/06/03/google-public-dns.html</link>
        <guid isPermaLink="true">http://codestix.com/2014/06/03/google-public-dns.html</guid>
        
        <category>Tools</category>
        
        
      </item>
    
      <item>
        <title>Reading Files with FileReader</title>
        <description>&lt;p&gt;The &lt;code&gt;FileReader&lt;/code&gt; API is really handy if you need to read a file using JavaScript. There’s a whole bunch of different methods available that allow you to get a file’s content in various formats.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;readAsText(file, encoding)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;readAsDataURL(file)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;readAsBinaryString(file)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;readAsArrayBuffer(file)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pass in a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;Blob&lt;/code&gt; object as the &lt;code&gt;file&lt;/code&gt; parameter.&lt;/p&gt;

&lt;p&gt;This is an asynchronous API so make sure that you declare your &lt;code&gt;onload&lt;/code&gt; handler before you call one of the read methods.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/FileAPI/&quot;&gt;W3C Specification&lt;/a&gt; - &lt;a href=&quot;http://caniuse.com/#feat=filereader&quot;&gt;Browser Support&lt;/a&gt; - &lt;a href=&quot;http://codepen.io/matt-west/full/KjEHg&quot;&gt;Demo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;readastext&quot;&gt;readAsText&lt;/h2&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; reader = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;new&lt;/span&gt; FileReader();

reader.&lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;onload&lt;/span&gt; = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;function&lt;/span&gt;(e) {
  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; text = reader.result;
}

reader.readAsText(file, encoding);
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;readasdataurl&quot;&gt;readAsDataURL&lt;/h2&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; reader = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;new&lt;/span&gt; FileReader();

reader.&lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;onload&lt;/span&gt; = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;function&lt;/span&gt;(e) {
  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; dataURL = reader.result;
}

reader.readAsDataURL(file);
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;readasbinarystring&quot;&gt;readAsBinaryString&lt;/h2&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; reader = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;new&lt;/span&gt; FileReader();

reader.&lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;onload&lt;/span&gt; = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;function&lt;/span&gt;(e) {
  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; rawData = reader.result;
}

reader.readAsBinaryString(file);
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;readasarraybuffer&quot;&gt;readAsArrayBuffer&lt;/h2&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; reader = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;new&lt;/span&gt; FileReader();

reader.&lt;span style=&quot;color:#06B;font-weight:bold&quot;&gt;onload&lt;/span&gt; = &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;function&lt;/span&gt;(e) {
  &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; arrayBuffer = reader.result;
}

reader.readAsArrayBuffer(file);
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;abort-file-reads&quot;&gt;Abort File Reads&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;abort()&lt;/code&gt; method can be used to stop a file read. This is handy if you’re dealing with large files.&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;reader.abort();
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 04 Apr 2014 13:00:00 +0100</pubDate>
        <link>http://codestix.com/2014/04/04/reading-files-with-filereader.html</link>
        <guid isPermaLink="true">http://codestix.com/2014/04/04/reading-files-with-filereader.html</guid>
        
        <category>JavaScript</category>
        
        
      </item>
    
      <item>
        <title>Voice Input with x-webkit-speech</title>
        <description>&lt;p&gt;If you’re immune to the awkward feeling that accompanies speaking to inanimate objects in public places this one’s for you.&lt;/p&gt;

&lt;p&gt;Adding the &lt;code&gt;x-webkit-speech&lt;/code&gt; attribute to your &lt;code&gt;input&lt;/code&gt; elements will enabled voice input.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://postachio-images.s3-website-us-east-1.amazonaws.com/4e993fc4b5c88cd33375265a094c786c/623d1a53297b693da8ed89c58e4a0d61/w600_225c100b86bfeaddd0aad5247d93bd86.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span style=&quot;color:#b48&quot;&gt;type&lt;/span&gt;=&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#b48&quot;&gt;x-webkit-speech&lt;/span&gt;&lt;span style=&quot;color:#070;font-weight:bold&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Chrome is the only browser that supports this right now.&lt;/p&gt;

&lt;h2 id=&quot;fyi&quot;&gt;FYI&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Pressing &lt;code&gt;Command&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;.&lt;/code&gt; (&lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;.&lt;/code&gt; on Windows) will launch the little speech popup when focussed on the input.&lt;/li&gt;
  &lt;li&gt;This works for &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;tel&lt;/code&gt;, and &lt;code&gt;number&lt;/code&gt; inputs.&lt;/li&gt;
  &lt;li&gt;A &lt;code&gt;webkitSpeech&lt;/code&gt; (boolean) attribute is added to the &lt;code&gt;HTMLInputElement&lt;/code&gt; interface in supported browsers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://codepen.io/matt-west/pen/wbpqu&quot;&gt;CodePen Demo&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Apr 2014 13:00:00 +0100</pubDate>
        <link>http://codestix.com/2014/04/02/x-webkit-speech.html</link>
        <guid isPermaLink="true">http://codestix.com/2014/04/02/x-webkit-speech.html</guid>
        
        <category>HTML</category>
        
        
      </item>
    
      <item>
        <title>Geolocation API</title>
        <description>&lt;p&gt;The Geolocation API makes it really easy to get the location of a device using JavaScript.&lt;/p&gt;

&lt;p&gt;Supporting browsers will expose a &lt;code&gt;geolocation&lt;/code&gt; interface on the &lt;code&gt;navigator&lt;/code&gt; object. This interface has a &lt;code&gt;getCurrentPosition()&lt;/code&gt; method with a success callback that will receive a &lt;a href=&quot;http://www.w3.org/TR/geolocation-API/#position_interface&quot;&gt;&lt;code&gt;Position&lt;/code&gt;&lt;/a&gt; interface.  &lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;navigator.geolocation.getCurrentPosition(success, error, options);
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The latitude and longitude coordinates can be accessed from the &lt;code&gt;Position&lt;/code&gt; interface like so:&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;navigator.geolocation.getCurrentPosition(&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;function&lt;/span&gt;(position) {  
    &lt;span style=&quot;color:#777&quot;&gt;// Get the positioning coordinates.  &lt;/span&gt;
    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; lat = position.coords.latitude;  
    &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; lon = position.coords.longitude;  

    &lt;span style=&quot;color:#777&quot;&gt;// Do something magical...  &lt;/span&gt;
}, &lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;function&lt;/span&gt;() {  
    alert(&lt;span style=&quot;background-color:hsla(0,100%,50%,0.05)&quot;&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;span style=&quot;color:#D20&quot;&gt;Oops! An error occured.&lt;/span&gt;&lt;span style=&quot;color:#710&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;);  
});
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You can also watch for location changes using the &lt;code&gt;watchPosition()&lt;/code&gt; method.&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;navigator.geolocation.watchPosition(success, error, options);
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;options&lt;/code&gt; object can be used to specify the accuracy of the data, a timeout threshold, and the maxage of cached location data.&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span style=&quot;color:#080;font-weight:bold&quot;&gt;var&lt;/span&gt; options = {
    &lt;span style=&quot;color:#606&quot;&gt;enableHighAccuracy&lt;/span&gt;: &lt;span style=&quot;color:#069&quot;&gt;true&lt;/span&gt;,
    &lt;span style=&quot;color:#606&quot;&gt;maximumAge&lt;/span&gt; : &lt;span style=&quot;color:#00D&quot;&gt;60000&lt;/span&gt;,
    &lt;span style=&quot;color:#606&quot;&gt;timeout&lt;/span&gt; : &lt;span style=&quot;color:#00D&quot;&gt;45000&lt;/span&gt;
};
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;fyi&quot;&gt;FYI&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;User’s will need to grant your application permission to grab their location. A permissions bar will appear at the top of the page (or an alert on mobile).&lt;/li&gt;
  &lt;li&gt;The accuracy of the data will vary depending on how the device is determining its location. Most phones have GPS these days but less accurate strategies (such as WiFi triangulation) may be used in the event that GPS is unavailable.&lt;/li&gt;
  &lt;li&gt;You’ll need to be serving your site over &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; for geolocation to work.&lt;/li&gt;
  &lt;li&gt;GPS will consume precious battery power, use the Geolocation API wisely on mobile.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/geolocation-API/&quot;&gt;W3C Specification&lt;/a&gt; - &lt;a href=&quot;http://caniuse.com/#feat=geolocation&quot;&gt;Browser Support&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Apr 2014 13:00:00 +0100</pubDate>
        <link>http://codestix.com/2014/04/01/geolocation-api.html</link>
        <guid isPermaLink="true">http://codestix.com/2014/04/01/geolocation-api.html</guid>
        
        <category>JavaScript</category>
        
        <category>Mobile</category>
        
        
      </item>
    
      <item>
        <title>Vibration API</title>
        <description>&lt;p&gt;Harness the device’s vibration motor using the &lt;code&gt;vibrate()&lt;/code&gt; method, accessible on the &lt;code&gt;navigator&lt;/code&gt; object.  &lt;/p&gt;

&lt;p&gt;Simply pass in the number of milliseconds you want the vibration to last.  &lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;navigator.vibrate(&lt;span style=&quot;color:#00D&quot;&gt;1000&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;You can also specify an array of values. Every other value will be interpreted as a pause.&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;CodeRay&quot;&gt;
  &lt;div class=&quot;code&quot;&gt;&lt;pre&gt;navigator.vibrate([&lt;span style=&quot;color:#00D&quot;&gt;1000&lt;/span&gt;, &lt;span style=&quot;color:#00D&quot;&gt;500&lt;/span&gt;, &lt;span style=&quot;color:#00D&quot;&gt;1000&lt;/span&gt;]);
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;For this example the device would vibrate for one second (1000 milliseconds), pause for half a second, and then vibrate for one more second.  &lt;/p&gt;

&lt;p&gt;Firefox led the way with browser support for this one, but Chrome and Opera have joined the party too.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/2014/WD-vibration-20140211/&quot;&gt;W3C Specification&lt;/a&gt; - &lt;a href=&quot;http://caniuse.com/#feat=vibration&quot;&gt;Browser Support&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 31 Mar 2014 13:00:00 +0100</pubDate>
        <link>http://codestix.com/2014/03/31/vibration-api.html</link>
        <guid isPermaLink="true">http://codestix.com/2014/03/31/vibration-api.html</guid>
        
        <category>JavaScript</category>
        
        <category>Mobile</category>
        
        
      </item>
    
  </channel>
</rss>
